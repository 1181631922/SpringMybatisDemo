<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!-- @version $Id: applicationContext.xml 561608 2007-08-01 00:33:12Z vgritsenko $ -->
<!--xmlns:util="http://www.springframework.org/schema/util"-->
<!--xmlns:configurator="http://cocoon.apache.org/schema/configurator"-->
<!--xmlns:avalon="http://cocoon.apache.org/schema/avalon"-->
<!--http://www.springframework.org/schema/util -->
<!--http://www.springframework.org/schema/util/spring-util-2.0.xsd-->
<!--http://cocoon.apache.org/schema/configurator -->
<!--http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.1.xsd-->
<!--http://cocoon.apache.org/schema/avalon -->
<!--http://cocoon.apache.org/schema/avalon/cocoon-avalon-1.0.xsd"-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
<!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
<!--xsi:schemaLocation="http://www.springframework.org/schema/beans-->
<!--http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
    </bean>


    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/Configuration.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--扫描mapper-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描包的路径-->
        <property name="basePackage" value="com.fanyafeng.mapper"/>
        <!--注入sqlsession工程bean的名字-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="userService" class="com.fanyafeng.service.impl.UserServiceImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!-- Activate Cocoon Spring Configurator -->
    <!--<configurator:settings/>-->

    <!-- Configure Log4j -->
    <!--<bean name="org.apache.cocoon.spring.configurator.log4j"-->
    <!--class="org.apache.cocoon.spring.configurator.log4j.Log4JConfigurator"-->
    <!--scope="singleton">-->
    <!--<property name="settings" ref="org.apache.cocoon.configuration.Settings"/>-->
    <!--<property name="resource" value="/WEB-INF/log4j.xml"/>-->
    <!--</bean>-->

    <!-- Activate Avalon Bridge -->
    <!--<avalon:bridge/>-->

</beans>
